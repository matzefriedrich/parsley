{{- /* Package declaration */ -}}
package {{ .PackageName }}

{{ "" }}

{{- /* Import statements */ -}}
{{- if .Imports }}
import (
    {{- range .Imports }}
    "{{ . }}"
    {{- end }}
)
{{- end }}

{{- /* Loop over interfaces */ -}}
{{ range .Interfaces }}
{{- $interfaceName := .Name }}
{{- $mockStructName := printf "%sMock" (.Name | asPrivate) }}

{{- /* Define the mock struct with func fields for each method */ -}}
type {{ $mockStructName }} struct {
    {{- range .Methods }}
    {{ .Name | asPrivate }} {{ .Name }}Func
    {{- end }}
}

{{- "\n" -}}

{{- /* Define func types for each method */ -}}
{{- range $i, $m := .Methods }}
type {{ $m.Name }}Func func({{ $m | FormattedParameters }}) {{ $m | FormattedResultTypes }}
{{- end }}

{{- "\n" -}}

{{- /* Define methods for each function, implementing the interface */ -}}
{{ range $i, $m := .Methods }}
func (m *{{ $mockStructName }}) {{ $m.Name }}({{ $m | FormattedParameters }}) {{ $m | FormattedResultTypes }} {
	{{- if $m | HasResults }}
	return m.{{ .Name | asPrivate }}({{ $m | FormattedCallParameters }})
    {{- else }}
	m.{{ .Name | asPrivate }}({{ $m | FormattedCallParameters }})
	{{- end }}
}
{{ end }}

{{- "\n" -}}

{{- /* Interface implementation assertion */ -}}
var _ {{ $interfaceName }} = (*{{ $mockStructName }})(nil)

{{ "" }}

{{- /* Define a constructor for the mock */ -}}
// New{{ $interfaceName }}Mock Creates a new configurable {{ $mockStructName }} object.
func New{{ $interfaceName }}Mock(
    {{- range $i, $method := .Methods }}
    {{ $method.Name | asPrivate }} {{ $method.Name }}Func,
    {{- end }}
) *{{ $mockStructName }} {
    return &{{ $mockStructName }}{
        {{- range .Methods }}
        {{ .Name | asPrivate }}: {{ .Name | asPrivate }},
        {{- end }}
    }
}
{{ end }}
